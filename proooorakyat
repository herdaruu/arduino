#include <iostream>
#include <fstream>
#include <conio.h>
#include <string>
#include <windows.h>
#pragma warning(disable:4996)
using namespace std;
int mulai, selesai;
const int TABLE_COUNT = 10;// Maximum number of tables
bool tables[TABLE_COUNT] = { true, true, true, true, true, true, true, true, true, true };
const int hargajam = 15000;
int uang;//input uang customer
//totalbill
int totalbill;
int totaljam;
void printReceipt(int tableNum, const string& name);
void displayTableStatus();
void displayMenu();
void bookTable();
void checkTables();
void checkBilling();
void delay(void) {
    int delay;
    delay = 1;
    while (delay < 20000000) {
        delay++;
    }
}



//fungsi tampilkan pesan selamat datang
void pesan_ane(void) {
    int i, panjg_char;
    char pesan[] = { 'S','e','l','a','m','a','t',' ','D','a','t','a','n','g','\0' };
    i = 0; panjg_char = strlen(pesan);
    cout << "\n\t ";
    while (i < panjg_char) {
        cout << pesan[i];
        delay();
        i++;
    }
    pesan[i] = 0;
    cout << endl;
}

//fungsi menampilkan pesan di program
void pesan(void) {
    int i, panjg_char;
    char pesan[] = { 'S','i','l','a','h','k','a','n',' ','L','o','g','i','n','\0' };
    i = 0; panjg_char = strlen(pesan);
    cout << "\n\t\t ";
    while (i < panjg_char) {
        cout << pesan[i];
        delay();
        i++;
    }
    pesan[i] = 0;
    cout << endl;
}

//fungsi menampilkan pesan rekursif+
void pesann(void) {
    int i, panjg_char;
    char pesan[] = { 'D','a','h','u','l','u','!','!','\0' };
    i = 0; panjg_char = strlen(pesan);
    cout << "\n\t\t\t ";
    while (i < panjg_char) {
        cout << pesan[i];
        delay();
        i++;
    }
    pesan[i] = 0;
    cout << endl << endl;
}

//fungsi menampilkan garis =
void garis(void) {
    int i;
    for (i = 1; i <= 22; i++) {
        cout << "= ";
        delay();
    }
    cout << endl;

}


void displayMenu()
{

    cout << "=============================================" << endl;
    cout << "|                  MAIN MENU                |" << endl;
    cout << "=============================================" << endl;
    cout << "|  1. Book a table                           |" << endl;
    cout << "|  2. Check table availability               |" << endl;
    cout << "|  3. Check Billing                          |" << endl;
    cout << "|  4. Exit                                   |" << endl;
    cout << "=============================================" << endl;
}

void bookTable()
{
    string nama;
    int jumlah_meja;
    cout << "Masukkan nama Anda: ";
    cin >> nama;
    cout << "Masukkan jumlah meja yang ingin Anda pesan: ";
    cin >> jumlah_meja;

    for (int i = 0; i < jumlah_meja; i++)
    {
        displayTableStatus();
        cout << "Masukkan nomor meja (1-10): ";
        int no_meja;
        cin >> no_meja;

        if (no_meja < 1 || no_meja > TABLE_COUNT) {
            cout << "Nomor meja tidak valid." << endl;
            i--; // retry the current iteration
            continue;
        }

        if (tables[no_meja - 1]) {
            cout << "harga Rp 15000/jam\n";
            cout << "Masukkan jam mulai :";
            cin >> mulai;
            cout << "Masukkan jam selesai : ";
            cin >> selesai;
            cout << "Total tagihan " << nama << " dalam " << (selesai - mulai) << " jam adalah " << (selesai - mulai) * hargajam;
            cout << "\nInputkan uang " << nama << " :";
            cin >> uang;
            if (uang < ((selesai - mulai) * hargajam))
            {
                cout << "\nUang anda kurang\n";
                i--; // retry the current iteration
                continue;
            }
            if (uang > ((selesai - mulai) * hargajam))
            {
                cout << "\nKembalian :" << uang - ((selesai - mulai) * hargajam);
            }
            cout << "\nMeja Anda siap untuk bermain, selamat bersenang-senang" << endl;
            cout << "Tunggu.... : ";
            tables[no_meja - 1] = false;
            Sleep(5000);
            printReceipt(no_meja, nama);
            system("cls");
        }
        else {
            cout << "Meja " << no_meja << " tidak tersedia." << endl;
            i--; // retry the current iteration
        }
    }
}

void printReceipt(int tableNum, const string& name)
{
    time_t ttime = time(0);
    tm* local_time = localtime(&ttime);
    ofstream receiptFile("receipt.txt",ios::trunc);
    receiptFile << "Billiard Table Booking Receipt" << endl;
    receiptFile << "-------------------------------" << endl;
    receiptFile << "                      DZ Billiard                    " << endl;
    receiptFile << "Jl.Adisucipto No.139,Jajar,Kec.Laweyan,kota Surakarta" << endl;
    receiptFile << "-----------------------------------------------------" << endl;
    receiptFile << "Kode Pemesanan: " << &name << endl;
    receiptFile << "Tanggal : " << local_time->tm_mday << "/" << 1 + local_time->tm_mon << "/" << 1900 + local_time->tm_year << endl;
    receiptFile << "Waktu : " << local_time->tm_hour << ":";
    receiptFile << local_time->tm_min << ":";
    receiptFile << 1 + local_time->tm_sec << endl;
    receiptFile << "Table Number: " << tableNum << endl;
    receiptFile << "Customer Name: " << name << endl;
    receiptFile << "Lama booking :" << (selesai - mulai) << " jam " << endl;
    receiptFile << "Total  :" << (selesai - mulai) * hargajam << endl;
    receiptFile << "Uang anda  :" << uang << endl;
    receiptFile << "Kembalian anda :" << (uang - ((selesai - mulai) * hargajam)) << endl;
    receiptFile << "-------------------------------" << endl;
    receiptFile << "Thank you for playing with us!" << endl;
    receiptFile.close();
    cout << "Booking successful! Receipt saved as receipt.txt" << endl;

}

void displayTableStatus()
{
    cout << "Available Billiard Tables:" << endl;
    for (int i = 0; i < TABLE_COUNT; i++) {
        cout << "Table " << (i + 1) << ": " << (tables[i] ? "Available" : "Not available") << endl;
    }
}


void checkTables()
{
    displayTableStatus();
}

void checkBilling()
{
    cout << "Billing Information: " << endl;
    string line;
    ifstream receiptFile("receipt.txt");

    if (receiptFile.is_open()) {
        while (getline(receiptFile, line)) {
            cout << line << endl;
        }
        receiptFile.close();
    }
    else {
        cout << "Unable to open file" << endl;
    }
}


int main()
{
    system("color f0");
    garis();
    system("color f1");
    pesan_ane();
    system("color f2");
    pesan();
    system("color f3");
    pesann();
    system("color f4");
    garis();
    system("color f5");
    string username, password;
    char ch;
    int yt;
    bool loggedIn = false;
    while (!loggedIn) { // loop for login process
        int attempts = 0;

        cout << "\n";
        cout << "===============================================" << endl;
        cout << "|           WELCOME TO BILLIARD CLUB           |" << endl;
        cout << "===============================================" << endl;
        while (attempts < 3) {
            cout << "Enter username: ";
            cin >> username;


            cout << "Enter password: ";
            while (true) {
                ch = _getch();
                if (ch == '\r') {
                    break;
                }
                else if (ch == '\b' && password.length() > 0) { //\b for backspace \r for enter
                    password.pop_back();
                    cout << "\b \b";
                }
                else {
                    password += ch;//agar karakter yang diinputkan di ubah menjadi *
                    cout << "*";
                }
            }

            cout << endl;

            if ((username == "david" && password == "admin123") ||
                (username == "erika" && password == "12345") ||
                (username == "daru" && password == "kacung1") ||
                (username == "admin" && password == "1111")) {
                cout << "Login successful!" << endl;
                loggedIn = true;
                system("cls");
                break;
            }
            else {
                cout << "Login failed. Invalid username or password. Try again." << endl;
                attempts++;
                password = "";
            }
        }

        if (!loggedIn) {
            cout << "Too many failed attempts. Exiting program." << endl;
            return 0;
        }
    }

    // Main loop for the program
    while (true) {
        displayMenu();

        int choice;
        cin >> choice;

        switch (choice) {
        case 1:
            system("cls");
            bookTable();
            break;
        case 2:
            system("cls");
            checkTables();
            break;
        case 3:
            system("cls");
            checkBilling();
            break;
        case 4:
            return 0;
        default:
            cout << "Invalid input. Please try again." << endl;
            break;
        }
    }
}
